#name: CI/CD Pipeline

#on:
#  push:
#    branches: [ "main" ] # Dispara o workflow quando houver um push na branch 'main'
#  pull_request:
#    branches: [ "main" ] # Dispara o workflow quando houver uma pull request para a branch 'main'

#jobs:
#  build:
#    name: Build e Teste
#    runs-on: ubuntu-latest

#    steps:
#    - name: Checkout do código
#      uses: actions/checkout@v4

#    - name: Configurar Node.js
#      uses: actions/setup-node@v3
#      with:
#        node-version: '18'

#    - name: Instalar dependências
#      run: npm install

#    - name: Build da aplicação
#      run: npm run build

#    - name: Executar testes (se houver)
#      run: npm run test # Adapte este comando se você tiver testes

#  docker-build-push:
#    needs: build
#    name: Build e Push da Imagem Docker
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main' # Executa apenas em pushes para a branch 'main'

#    steps:
#    - name: Checkout do código
#      uses: actions/checkout@v4

#    - name: Fazer login no Docker Hub
#      run: |
#        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#    - name: Construir e fazer push da imagem Docker
#      run: |
#        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:${{ github.sha }} .
#        docker push ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:${{ github.sha }}
#        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:latest
#        docker push ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:latest

#  deploy:
#    needs: [build, docker-build-push]
#    name: Deploy para Servidor (Exemplo)
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'

#    steps:
#    - name: SSH para o servidor e pull da nova imagem (Exemplo)
#      uses: appleboy/ssh-action@v1
#      with:
#        host: ${{ secrets.SERVER_IP }}
#        username: ${{ secrets.SERVER_USERNAME }}
#        key: ${{ secrets.SERVER_PRIVATE_KEY }}
#        script: |
#          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:latest
#          docker stop seu-container-do-jogo || true
#          docker rm seu-container-do-jogo || true
#          docker run -d -p 3000:3000 --name seu-container-do-jogo ${{ secrets.DOCKERHUB_USERNAME }}/seu-nome-do-jogo:latest